============================================================
GOLD Parser Builder
Version 5.2.0.
============================================================


========================================
Lexical Groups
========================================

0    Comment Line
1    Comment Block




========================================
Terminals
========================================

 0      (EOF)
 1      (Error)
 2      Comment
 3      NewLine
 4      Whitespace
 5      '*/'
 6      '/*'
 7      '//'
 8      '-'
 9      '#'
 10     '('
 11     ')'
 12     '*'
 13     ','
 14     '/'
 15     ':='
 16     ';'
 17     '@'
 18     '['
 19     ']'
 20     '^'
 21     '{'
 22     '}'
 23     '+'
 24     '<'
 25     '<='
 26     '<>'
 27     '<->'
 28     '='
 29     '=?'
 30     '>'
 31     '->'
 32     '>='
 33     '>>'
 34     '∂'
 35     amount
 36     and
 37     as
 38     bool
 39     by
 40     define
 41     dispose
 42     Double
 43     else
 44     elseif
 45     end
 46     equilibrate
 47     false
 48     Float
 49     flow
 50     for
 51     fun
 52     function
 53     Id
 54     if
 55     in
 56     Integer
 57     list
 58     mix
 59     net
 60     network
 61     not
 62     number
 63     or
 64     QuotedString
 65     report
 66     sample
 67     species
 68     split
 69     string
 70     then
 71     transfer
 72     true
 73     with
 74     yield


========================================
Nonterminals
========================================

75      <Allocation>
76      <And Exp>
77      <Base Exp>
78      <Comp Exp>
79      <Complex>
80      <Distribution>
81      <Else>
82      <Else Exp>
83      <EmptySample>
84      <EndCondition>
85      <Expression>
86      <Expressions>
87      <ExpressionSeq>
88      <Fun>
89      <Fun Instance>
90      <Function>
91      <Header>
92      <Headers>
93      <Ids>
94      <Mult Exp>
95      <Neg Exp>
96      <Net>
97      <Net Instance>
98      <Network>
99      <Not Exp>
100     <Or Exp>
101     <Param>
102     <Params>
103     <ParamSeq>
104     <Powr Exp>
105     <Quantity>
106     <Rate>
107     <Reaction>
108     <Report>
109     <Reports>
110     <Sample>
111     <Simplex>
112     <Species>
113     <Statement>
114     <Statements>
115     <Substance>
116     <Substances>
117     <Sum Exp>
118     <Temperature>
119     <Top>
120     <Transition>
121     <Volume>


========================================
Rules
========================================

0       <Top> ::= <Statements>
1       <Function> ::= Id '=' <Expression>
2       <Function> ::= Id <Fun>
3       <Fun> ::= <Headers> '{' <Expression> '}'
4       <Network> ::= Id '=' <Expression>
5       <Network> ::= Id <Net>
6       <Net> ::= <Header> '{' <Statements> '}'
7       <EmptySample> ::= Id '{' <Expression> <Volume> ',' <Expression> <Temperature> '}'
8       <Sample> ::= Id '=' <Expression>
9       <Sample> ::= <EmptySample>
10      <Sample> ::= Id
11      <Species> ::= Id '=' <Expression>
12      <Species> ::= '{' <Substances> '}'
13      <Species> ::= <Substances> '@' <Expression> <Quantity> <Allocation>
14      <Headers> ::= <Headers> <Header>
15      <Headers> ::= <Header>
16      <Header> ::= '(' <Params> ')'
17      <Params> ::= <ParamSeq>
18      <Params> ::= 
19      <ParamSeq> ::= <ParamSeq> ',' <Param>
20      <ParamSeq> ::= <Param>
21      <Param> ::= bool <Ids>
22      <Param> ::= number <Ids>
23      <Param> ::= string <Ids>
24      <Param> ::= list <Ids>
25      <Param> ::= flow <Ids>
26      <Param> ::= species <Ids>
27      <Param> ::= sample <Ids>
28      <Param> ::= function <Ids>
29      <Param> ::= network <Ids>
30      <Param> ::= '[' <Params> ']'
31      <Ids> ::= <Ids> Id
32      <Ids> ::= Id
33      <Allocation> ::= in <Expression>
34      <Allocation> ::= 
35      <Substances> ::= <Substances> ',' <Substance>
36      <Substances> ::= <Substance>
37      <Substance> ::= Id '#' <Expression>
38      <Substance> ::= Id
39      <Statements> ::= <Statements> <Statement>
40      <Statements> ::= 
41      <Statement> ::= <Net Instance>
42      <Statement> ::= <Reaction>
43      <Statement> ::= bool Id '=' <Expression>
44      <Statement> ::= number Id '=' <Expression>
45      <Statement> ::= number Id '=?' <Distribution>
46      <Statement> ::= string Id '=' <Expression>
47      <Statement> ::= list Id '=' <Expression>
48      <Statement> ::= flow Id '=' <Expression>
49      <Statement> ::= species <Species>
50      <Statement> ::= sample <Sample>
51      <Statement> ::= function <Function>
52      <Statement> ::= network <Network>
53      <Statement> ::= '[' <Params> ']' '=' <Expression>
54      <Statement> ::= amount <Ids> '@' <Expression> <Quantity> <Allocation>
55      <Statement> ::= report <Reports>
56      <Statement> ::= if <Expression> then <Statements> <Else>
57      <Statement> ::= ';'
58      <Statement> ::= mix Id ':=' <Expression> with <Expression>
59      <Statement> ::= mix Id with <Expression>
60      <Statement> ::= split Id ',' Id ':=' <Expression> by <Expression>
61      <Statement> ::= equilibrate Id ':=' <Expression> <EndCondition>
62      <Statement> ::= equilibrate Id <EndCondition>
63      <Statement> ::= equilibrate <EndCondition>
64      <Statement> ::= transfer <EmptySample> ':=' <Expression>
65      <Statement> ::= dispose <Expression>
66      <Net Instance> ::= Id '(' <Expressions> ')'
67      <Else> ::= elseif <Expression> then <Statements> <Else>
68      <Else> ::= else <Statements> end
69      <Else> ::= end
70      <Reaction> ::= <Transition>
71      <Reaction> ::= <Complex> '>>' <Transition>
72      <Transition> ::= <Complex> '->' <Complex>
73      <Transition> ::= <Complex> '->' '{' <Rate> '}' <Complex>
74      <Transition> ::= <Complex> '->' <Complex> '{' <Rate> '}'
75      <Transition> ::= <Complex> '<->' <Complex>
76      <Transition> ::= <Complex> '{' <Rate> '}' '<->' '{' <Rate> '}' <Complex>
77      <Transition> ::= <Complex> '<->' <Complex> '{' <Rate> '}' '{' <Rate> '}'
78      <Rate> ::= <Expression>
79      <Rate> ::= <Expression> ',' <Expression>
80      <Rate> ::= '{' <Expression> '}'
81      <Complex> ::= <Complex> '+' <Simplex>
82      <Complex> ::= <Simplex>
83      <Simplex> ::= Integer Id
84      <Simplex> ::= Id '*' Id
85      <Simplex> ::= Id
86      <Simplex> ::= '#'
87      <Expression> ::= <Or Exp>
88      <Base Exp> ::= <Fun Instance>
89      <Base Exp> ::= true
90      <Base Exp> ::= false
91      <Base Exp> ::= Integer
92      <Base Exp> ::= Float
93      <Base Exp> ::= Double
94      <Base Exp> ::= QuotedString
95      <Base Exp> ::= if <Expression> then <Expression> <Else Exp>
96      <Base Exp> ::= fun <Fun>
97      <Base Exp> ::= net <Net>
98      <Base Exp> ::= '(' <Expression> ')'
99      <Base Exp> ::= '[' <Expressions> ']'
100     <Base Exp> ::= define <Statements> yield <Expression>
101     <Fun Instance> ::= Id
102     <Fun Instance> ::= <Fun Instance> '(' <Expressions> ')'
103     <Else Exp> ::= elseif <Expression> then <Expression> <Else Exp>
104     <Else Exp> ::= else <Expression> end
105     <Expressions> ::= <ExpressionSeq>
106     <Expressions> ::= 
107     <ExpressionSeq> ::= <ExpressionSeq> ',' <Expression>
108     <ExpressionSeq> ::= <Expression>
109     <Reports> ::= <Reports> ',' <Report>
110     <Reports> ::= <Report>
111     <Report> ::= <Expression> as <Expression>
112     <Report> ::= <Expression>
113     <Distribution> ::= Id '(' <ExpressionSeq> ')'
114     <EndCondition> ::= for <Expression>
115     <Or Exp> ::= <Or Exp> or <And Exp>
116     <Or Exp> ::= <And Exp>
117     <And Exp> ::= <And Exp> and <Not Exp>
118     <And Exp> ::= <Not Exp>
119     <Not Exp> ::= not <Comp Exp>
120     <Not Exp> ::= <Comp Exp>
121     <Comp Exp> ::= <Sum Exp> '=' <Sum Exp>
122     <Comp Exp> ::= <Sum Exp> '<>' <Sum Exp>
123     <Comp Exp> ::= <Sum Exp> '<=' <Sum Exp>
124     <Comp Exp> ::= <Sum Exp> '>=' <Sum Exp>
125     <Comp Exp> ::= <Sum Exp> '<' <Sum Exp>
126     <Comp Exp> ::= <Sum Exp> '>' <Sum Exp>
127     <Comp Exp> ::= <Sum Exp>
128     <Sum Exp> ::= <Sum Exp> '+' <Mult Exp>
129     <Sum Exp> ::= <Sum Exp> '-' <Mult Exp>
130     <Sum Exp> ::= <Mult Exp>
131     <Mult Exp> ::= <Mult Exp> '*' <Neg Exp>
132     <Mult Exp> ::= <Mult Exp> '/' <Neg Exp>
133     <Mult Exp> ::= <Neg Exp>
134     <Neg Exp> ::= '-' <Powr Exp>
135     <Neg Exp> ::= '∂' <Powr Exp>
136     <Neg Exp> ::= <Powr Exp>
137     <Powr Exp> ::= <Powr Exp> '^' <Base Exp>
138     <Powr Exp> ::= <Base Exp>
139     <Volume> ::= Id
140     <Temperature> ::= Id
141     <Quantity> ::= Id


