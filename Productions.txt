============================================================
GOLD Parser Builder
Version 5.2.0.
============================================================


========================================
Lexical Groups
========================================

0    Comment Line
1    Comment Block




========================================
Terminals
========================================

 0      (EOF)
 1      (Error)
 2      Comment
 3      NewLine
 4      Whitespace
 5      '*/'
 6      '/*'
 7      '//'
 8      '-'
 9      '#'
 10     '('
 11     ')'
 12     '*'
 13     ','
 14     '/'
 15     ':='
 16     ';'
 17     '@'
 18     '['
 19     ']'
 20     '^'
 21     '{'
 22     '}'
 23     '+'
 24     '<'
 25     '<='
 26     '<>'
 27     '<->'
 28     '='
 29     '=?'
 30     '>'
 31     '->'
 32     '>='
 33     '>>'
 34     amount
 35     and
 36     as
 37     bool
 38     by
 39     dispose
 40     Double
 41     else
 42     elseif
 43     end
 44     equilibrate
 45     false
 46     Float
 47     flow
 48     for
 49     fun
 50     function
 51     Id
 52     if
 53     in
 54     Integer
 55     mix
 56     net
 57     network
 58     not
 59     number
 60     or
 61     QuotedString
 62     report
 63     return
 64     sample
 65     species
 66     split
 67     string
 68     then
 69     transfer
 70     true
 71     with


========================================
Nonterminals
========================================

72      <Allocation>
73      <And Exp>
74      <Args>
75      <Base Exp>
76      <Comp Exp>
77      <Complex>
78      <Distribution>
79      <Else>
80      <Else Exp>
81      <EmptySample>
82      <Expression>
83      <Fun>
84      <Fun Instance>
85      <Function>
86      <Header>
87      <Headers>
88      <Ids>
89      <Mult Exp>
90      <Neg Exp>
91      <Net>
92      <Net Instance>
93      <Network>
94      <Not Exp>
95      <Or Exp>
96      <Param>
97      <Params>
98      <Powr Exp>
99      <Quantity>
100     <Rate>
101     <Reaction>
102     <Report>
103     <Reports>
104     <Sample>
105     <Simplex>
106     <Species>
107     <Statement>
108     <Statements>
109     <Substance>
110     <Substances>
111     <Sum Exp>
112     <Temperature>
113     <Top>
114     <Transition>
115     <Volume>


========================================
Rules
========================================

0       <Top> ::= <Statements>
1       <Function> ::= Id '=' <Expression>
2       <Function> ::= Id <Fun>
3       <Fun> ::= <Headers> '{' <Statements> return <Expression> '}'
4       <Network> ::= Id '=' <Expression>
5       <Network> ::= Id <Net>
6       <Net> ::= <Header> '{' <Statements> '}'
7       <EmptySample> ::= Id '{' <Expression> <Volume> ',' <Expression> <Temperature> '}'
8       <Sample> ::= Id '=' <Expression>
9       <Sample> ::= <EmptySample>
10      <Sample> ::= Id
11      <Species> ::= Id '=' <Expression>
12      <Species> ::= '{' <Substances> '}'
13      <Species> ::= <Substances> '@' <Expression> <Quantity> <Allocation>
14      <Headers> ::= <Headers> <Header>
15      <Headers> ::= <Header>
16      <Header> ::= '(' ')'
17      <Header> ::= '(' <Params> ')'
18      <Params> ::= <Params> ',' <Param>
19      <Params> ::= <Param>
20      <Param> ::= bool <Ids>
21      <Param> ::= number <Ids>
22      <Param> ::= string <Ids>
23      <Param> ::= flow <Ids>
24      <Param> ::= species <Ids>
25      <Param> ::= sample <Ids>
26      <Param> ::= function <Ids>
27      <Param> ::= network <Ids>
28      <Ids> ::= <Ids> Id
29      <Ids> ::= Id
30      <Allocation> ::= in <Expression>
31      <Allocation> ::= 
32      <Substances> ::= <Substances> ',' <Substance>
33      <Substances> ::= <Substance>
34      <Substance> ::= Id '#' <Expression>
35      <Substance> ::= Id
36      <Statements> ::= <Statements> <Statement>
37      <Statements> ::= 
38      <Statement> ::= <Net Instance>
39      <Statement> ::= <Reaction>
40      <Statement> ::= bool Id '=' <Expression>
41      <Statement> ::= number Id '=' <Expression>
42      <Statement> ::= number Id '=?' <Distribution>
43      <Statement> ::= string Id '=' <Expression>
44      <Statement> ::= flow Id '=' <Expression>
45      <Statement> ::= sample <Sample>
46      <Statement> ::= species <Species>
47      <Statement> ::= function <Function>
48      <Statement> ::= network <Network>
49      <Statement> ::= amount <Ids> '@' <Expression> <Quantity> <Allocation>
50      <Statement> ::= report <Reports>
51      <Statement> ::= if <Expression> then <Statements> <Else>
52      <Statement> ::= ';'
53      <Statement> ::= mix Id ':=' <Expression> with <Expression>
54      <Statement> ::= mix Id with <Expression>
55      <Statement> ::= split Id ',' Id ':=' <Expression> by <Expression>
56      <Statement> ::= equilibrate Id ':=' <Expression> for <Expression>
57      <Statement> ::= equilibrate Id for <Expression>
58      <Statement> ::= equilibrate for <Expression>
59      <Statement> ::= transfer <EmptySample> ':=' <Expression>
60      <Statement> ::= dispose <Expression>
61      <Net Instance> ::= Id '(' ')'
62      <Net Instance> ::= Id '(' <Args> ')'
63      <Else> ::= elseif <Expression> then <Statements> <Else>
64      <Else> ::= else <Statements> end
65      <Else> ::= end
66      <Reaction> ::= <Transition>
67      <Reaction> ::= <Complex> '>>' <Transition>
68      <Transition> ::= <Complex> '->' <Complex>
69      <Transition> ::= <Complex> '->' '{' <Rate> '}' <Complex>
70      <Transition> ::= <Complex> '->' <Complex> '{' <Rate> '}'
71      <Transition> ::= <Complex> '<->' <Complex>
72      <Transition> ::= <Complex> '{' <Rate> '}' '<->' '{' <Rate> '}' <Complex>
73      <Transition> ::= <Complex> '<->' <Complex> '{' <Rate> '}' '{' <Rate> '}'
74      <Rate> ::= <Expression>
75      <Rate> ::= <Expression> ',' <Expression>
76      <Rate> ::= '{' <Expression> '}'
77      <Complex> ::= <Complex> '+' <Simplex>
78      <Complex> ::= <Simplex>
79      <Simplex> ::= Integer Id
80      <Simplex> ::= Id '*' Id
81      <Simplex> ::= Id
82      <Simplex> ::= '#'
83      <Expression> ::= <Or Exp>
84      <Base Exp> ::= <Fun Instance>
85      <Base Exp> ::= true
86      <Base Exp> ::= false
87      <Base Exp> ::= Integer
88      <Base Exp> ::= Float
89      <Base Exp> ::= Double
90      <Base Exp> ::= QuotedString
91      <Base Exp> ::= if <Expression> then <Expression> <Else Exp>
92      <Base Exp> ::= fun <Fun>
93      <Base Exp> ::= net <Net>
94      <Base Exp> ::= '(' <Expression> ')'
95      <Fun Instance> ::= Id
96      <Fun Instance> ::= <Fun Instance> '(' ')'
97      <Fun Instance> ::= <Fun Instance> '(' <Args> ')'
98      <Else Exp> ::= elseif <Expression> then <Expression> <Else Exp>
99      <Else Exp> ::= else <Expression> end
100     <Args> ::= <Args> ',' <Expression>
101     <Args> ::= <Expression>
102     <Reports> ::= <Reports> ',' <Report>
103     <Reports> ::= <Report>
104     <Report> ::= <Expression> as '[' <Args> ']'
105     <Report> ::= <Expression> as <Expression>
106     <Report> ::= <Expression>
107     <Distribution> ::= Id '(' <Args> ')'
108     <Or Exp> ::= <Or Exp> or <And Exp>
109     <Or Exp> ::= <And Exp>
110     <And Exp> ::= <And Exp> and <Not Exp>
111     <And Exp> ::= <Not Exp>
112     <Not Exp> ::= not <Comp Exp>
113     <Not Exp> ::= <Comp Exp>
114     <Comp Exp> ::= <Sum Exp> '=' <Sum Exp>
115     <Comp Exp> ::= <Sum Exp> '<>' <Sum Exp>
116     <Comp Exp> ::= <Sum Exp> '<=' <Sum Exp>
117     <Comp Exp> ::= <Sum Exp> '>=' <Sum Exp>
118     <Comp Exp> ::= <Sum Exp> '<' <Sum Exp>
119     <Comp Exp> ::= <Sum Exp> '>' <Sum Exp>
120     <Comp Exp> ::= <Sum Exp>
121     <Sum Exp> ::= <Sum Exp> '+' <Mult Exp>
122     <Sum Exp> ::= <Sum Exp> '-' <Mult Exp>
123     <Sum Exp> ::= <Mult Exp>
124     <Mult Exp> ::= <Mult Exp> '*' <Neg Exp>
125     <Mult Exp> ::= <Mult Exp> '/' <Neg Exp>
126     <Mult Exp> ::= <Neg Exp>
127     <Neg Exp> ::= '-' <Powr Exp>
128     <Neg Exp> ::= <Powr Exp>
129     <Powr Exp> ::= <Powr Exp> '^' <Base Exp>
130     <Powr Exp> ::= <Base Exp>
131     <Volume> ::= Id
132     <Temperature> ::= Id
133     <Quantity> ::= Id


