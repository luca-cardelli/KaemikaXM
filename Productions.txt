============================================================
GOLD Parser Builder
Version 5.2.0.
============================================================


========================================
Lexical Groups
========================================

0    Comment Line
1    Comment Block




========================================
Terminals
========================================

 0      (EOF)
 1      (Error)
 2      Comment
 3      NewLine
 4      Whitespace
 5      '*/'
 6      '/*'
 7      '//'
 8      '-'
 9      '#'
 10     '('
 11     ')'
 12     '*'
 13     ','
 14     '/'
 15     ':='
 16     ';'
 17     '@'
 18     '['
 19     ']'
 20     '^'
 21     '{'
 22     '}'
 23     '+'
 24     '<'
 25     '<='
 26     '<>'
 27     '<->'
 28     '='
 29     '=?'
 30     '>'
 31     '->'
 32     '>='
 33     '>>'
 34     '∂'
 35     amount
 36     and
 37     as
 38     bool
 39     by
 40     define
 41     dispose
 42     Double
 43     else
 44     elseif
 45     end
 46     equilibrate
 47     false
 48     Float
 49     flow
 50     for
 51     fun
 52     function
 53     Id
 54     if
 55     in
 56     Integer
 57     minimize
 58     mix
 59     net
 60     network
 61     not
 62     number
 63     or
 64     QuotedString
 65     report
 66     return
 67     sample
 68     species
 69     split
 70     string
 71     then
 72     transfer
 73     true
 74     with


========================================
Nonterminals
========================================

75      <Allocation>
76      <And Exp>
77      <Args>
78      <Base Exp>
79      <Comp Exp>
80      <Complex>
81      <Distribution>
82      <Else>
83      <Else Exp>
84      <EmptySample>
85      <EndCondition>
86      <Expression>
87      <Fun>
88      <Fun Instance>
89      <Function>
90      <Header>
91      <Headers>
92      <Ids>
93      <Mult Exp>
94      <Neg Exp>
95      <Net>
96      <Net Instance>
97      <Network>
98      <Not Exp>
99      <Or Exp>
100     <Param>
101     <Params>
102     <Powr Exp>
103     <Quantity>
104     <Rate>
105     <Reaction>
106     <Report>
107     <Reports>
108     <Sample>
109     <Simplex>
110     <Species>
111     <Statement>
112     <Statements>
113     <Substance>
114     <Substances>
115     <Sum Exp>
116     <Temperature>
117     <Top>
118     <Transition>
119     <Volume>


========================================
Rules
========================================

0       <Top> ::= <Statements>
1       <Function> ::= Id '=' <Expression>
2       <Function> ::= Id <Fun>
3       <Fun> ::= <Headers> '{' <Expression> '}'
4       <Network> ::= Id '=' <Expression>
5       <Network> ::= Id <Net>
6       <Net> ::= <Header> '{' <Statements> '}'
7       <EmptySample> ::= Id '{' <Expression> <Volume> ',' <Expression> <Temperature> '}'
8       <Sample> ::= Id '=' <Expression>
9       <Sample> ::= <EmptySample>
10      <Sample> ::= Id
11      <Species> ::= Id '=' <Expression>
12      <Species> ::= '{' <Substances> '}'
13      <Species> ::= <Substances> '@' <Expression> <Quantity> <Allocation>
14      <Headers> ::= <Headers> <Header>
15      <Headers> ::= <Header>
16      <Header> ::= '(' ')'
17      <Header> ::= '(' <Params> ')'
18      <Params> ::= <Params> ',' <Param>
19      <Params> ::= <Param>
20      <Param> ::= bool <Ids>
21      <Param> ::= number <Ids>
22      <Param> ::= string <Ids>
23      <Param> ::= flow <Ids>
24      <Param> ::= species <Ids>
25      <Param> ::= sample <Ids>
26      <Param> ::= function <Ids>
27      <Param> ::= network <Ids>
28      <Ids> ::= <Ids> Id
29      <Ids> ::= Id
30      <Allocation> ::= in <Expression>
31      <Allocation> ::= 
32      <Substances> ::= <Substances> ',' <Substance>
33      <Substances> ::= <Substance>
34      <Substance> ::= Id '#' <Expression>
35      <Substance> ::= Id
36      <Statements> ::= <Statements> <Statement>
37      <Statements> ::= 
38      <Statement> ::= <Net Instance>
39      <Statement> ::= <Reaction>
40      <Statement> ::= bool Id '=' <Expression>
41      <Statement> ::= number Id '=' <Expression>
42      <Statement> ::= number Id '=?' <Distribution>
43      <Statement> ::= string Id '=' <Expression>
44      <Statement> ::= flow Id '=' <Expression>
45      <Statement> ::= sample <Sample>
46      <Statement> ::= species <Species>
47      <Statement> ::= function <Function>
48      <Statement> ::= network <Network>
49      <Statement> ::= amount <Ids> '@' <Expression> <Quantity> <Allocation>
50      <Statement> ::= report <Reports>
51      <Statement> ::= if <Expression> then <Statements> <Else>
52      <Statement> ::= ';'
53      <Statement> ::= mix Id ':=' <Expression> with <Expression>
54      <Statement> ::= mix Id with <Expression>
55      <Statement> ::= split Id ',' Id ':=' <Expression> by <Expression>
56      <Statement> ::= equilibrate Id ':=' <Expression> <EndCondition>
57      <Statement> ::= equilibrate Id <EndCondition>
58      <Statement> ::= equilibrate <EndCondition>
59      <Statement> ::= transfer <EmptySample> ':=' <Expression>
60      <Statement> ::= dispose <Expression>
61      <Net Instance> ::= Id '(' ')'
62      <Net Instance> ::= Id '(' <Args> ')'
63      <Else> ::= elseif <Expression> then <Statements> <Else>
64      <Else> ::= else <Statements> end
65      <Else> ::= end
66      <Reaction> ::= <Transition>
67      <Reaction> ::= <Complex> '>>' <Transition>
68      <Transition> ::= <Complex> '->' <Complex>
69      <Transition> ::= <Complex> '->' '{' <Rate> '}' <Complex>
70      <Transition> ::= <Complex> '->' <Complex> '{' <Rate> '}'
71      <Transition> ::= <Complex> '<->' <Complex>
72      <Transition> ::= <Complex> '{' <Rate> '}' '<->' '{' <Rate> '}' <Complex>
73      <Transition> ::= <Complex> '<->' <Complex> '{' <Rate> '}' '{' <Rate> '}'
74      <Rate> ::= <Expression>
75      <Rate> ::= <Expression> ',' <Expression>
76      <Rate> ::= '{' <Expression> '}'
77      <Complex> ::= <Complex> '+' <Simplex>
78      <Complex> ::= <Simplex>
79      <Simplex> ::= Integer Id
80      <Simplex> ::= Id '*' Id
81      <Simplex> ::= Id
82      <Simplex> ::= '#'
83      <Expression> ::= <Or Exp>
84      <Base Exp> ::= <Fun Instance>
85      <Base Exp> ::= true
86      <Base Exp> ::= false
87      <Base Exp> ::= Integer
88      <Base Exp> ::= Float
89      <Base Exp> ::= Double
90      <Base Exp> ::= QuotedString
91      <Base Exp> ::= if <Expression> then <Expression> <Else Exp>
92      <Base Exp> ::= fun <Fun>
93      <Base Exp> ::= net <Net>
94      <Base Exp> ::= '(' <Expression> ')'
95      <Base Exp> ::= define <Statements> return <Expression>
96      <Fun Instance> ::= Id
97      <Fun Instance> ::= <Fun Instance> '(' ')'
98      <Fun Instance> ::= <Fun Instance> '(' <Args> ')'
99      <Else Exp> ::= elseif <Expression> then <Expression> <Else Exp>
100     <Else Exp> ::= else <Expression> end
101     <Args> ::= <Args> ',' <Expression>
102     <Args> ::= <Expression>
103     <Reports> ::= <Reports> ',' <Report>
104     <Reports> ::= <Report>
105     <Report> ::= <Expression> as '[' <Args> ']'
106     <Report> ::= <Expression> as <Expression>
107     <Report> ::= <Expression>
108     <Distribution> ::= Id '(' <Args> ')'
109     <EndCondition> ::= for <Expression>
110     <EndCondition> ::= for <Expression> minimize <Expression>
111     <Or Exp> ::= <Or Exp> or <And Exp>
112     <Or Exp> ::= <And Exp>
113     <And Exp> ::= <And Exp> and <Not Exp>
114     <And Exp> ::= <Not Exp>
115     <Not Exp> ::= not <Comp Exp>
116     <Not Exp> ::= <Comp Exp>
117     <Comp Exp> ::= <Sum Exp> '=' <Sum Exp>
118     <Comp Exp> ::= <Sum Exp> '<>' <Sum Exp>
119     <Comp Exp> ::= <Sum Exp> '<=' <Sum Exp>
120     <Comp Exp> ::= <Sum Exp> '>=' <Sum Exp>
121     <Comp Exp> ::= <Sum Exp> '<' <Sum Exp>
122     <Comp Exp> ::= <Sum Exp> '>' <Sum Exp>
123     <Comp Exp> ::= <Sum Exp>
124     <Sum Exp> ::= <Sum Exp> '+' <Mult Exp>
125     <Sum Exp> ::= <Sum Exp> '-' <Mult Exp>
126     <Sum Exp> ::= <Mult Exp>
127     <Mult Exp> ::= <Mult Exp> '*' <Neg Exp>
128     <Mult Exp> ::= <Mult Exp> '/' <Neg Exp>
129     <Mult Exp> ::= <Neg Exp>
130     <Neg Exp> ::= '-' <Powr Exp>
131     <Neg Exp> ::= '∂' <Powr Exp>
132     <Neg Exp> ::= <Powr Exp>
133     <Powr Exp> ::= <Powr Exp> '^' <Base Exp>
134     <Powr Exp> ::= <Base Exp>
135     <Volume> ::= Id
136     <Temperature> ::= Id
137     <Quantity> ::= Id


