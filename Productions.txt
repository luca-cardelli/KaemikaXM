============================================================
GOLD Parser Builder
Version 5.2.0.
============================================================


========================================
Lexical Groups
========================================

0    Comment Line
1    Comment Block




========================================
Terminals
========================================

 0      (EOF)
 1      (Error)
 2      Comment
 3      NewLine
 4      Whitespace
 5      '*/'
 6      '/*'
 7      '//'
 8      '-'
 9      '#'
 10     '('
 11     ')'
 12     '*'
 13     ','
 14     '/'
 15     ':='
 16     ';'
 17     '@'
 18     '['
 19     ']'
 20     '^'
 21     '{'
 22     '}'
 23     '+'
 24     '<'
 25     '<='
 26     '<>'
 27     '<->'
 28     '='
 29     '=?'
 30     '>'
 31     '->'
 32     '>='
 33     '>>'
 34     amount
 35     and
 36     as
 37     bool
 38     by
 39     define
 40     dispose
 41     Double
 42     else
 43     elseif
 44     end
 45     equilibrate
 46     false
 47     Float
 48     flow
 49     for
 50     fun
 51     function
 52     Id
 53     if
 54     in
 55     Integer
 56     mix
 57     net
 58     network
 59     not
 60     number
 61     or
 62     QuotedString
 63     report
 64     return
 65     sample
 66     species
 67     split
 68     string
 69     then
 70     transfer
 71     true
 72     with


========================================
Nonterminals
========================================

73      <Allocation>
74      <And Exp>
75      <Args>
76      <Base Exp>
77      <Comp Exp>
78      <Complex>
79      <Distribution>
80      <Else>
81      <Else Exp>
82      <EmptySample>
83      <Expression>
84      <Fun>
85      <Fun Instance>
86      <Function>
87      <Header>
88      <Headers>
89      <Ids>
90      <Mult Exp>
91      <Neg Exp>
92      <Net>
93      <Net Instance>
94      <Network>
95      <Not Exp>
96      <Or Exp>
97      <Param>
98      <Params>
99      <Powr Exp>
100     <Quantity>
101     <Rate>
102     <Reaction>
103     <Report>
104     <Reports>
105     <Sample>
106     <Simplex>
107     <Species>
108     <Statement>
109     <Statements>
110     <Substance>
111     <Substances>
112     <Sum Exp>
113     <Temperature>
114     <Top>
115     <Transition>
116     <Volume>


========================================
Rules
========================================

0       <Top> ::= <Statements>
1       <Function> ::= Id '=' <Expression>
2       <Function> ::= Id <Fun>
3       <Fun> ::= <Headers> '{' <Expression> '}'
4       <Network> ::= Id '=' <Expression>
5       <Network> ::= Id <Net>
6       <Net> ::= <Header> '{' <Statements> '}'
7       <EmptySample> ::= Id '{' <Expression> <Volume> ',' <Expression> <Temperature> '}'
8       <Sample> ::= Id '=' <Expression>
9       <Sample> ::= <EmptySample>
10      <Sample> ::= Id
11      <Species> ::= Id '=' <Expression>
12      <Species> ::= '{' <Substances> '}'
13      <Species> ::= <Substances> '@' <Expression> <Quantity> <Allocation>
14      <Headers> ::= <Headers> <Header>
15      <Headers> ::= <Header>
16      <Header> ::= '(' ')'
17      <Header> ::= '(' <Params> ')'
18      <Params> ::= <Params> ',' <Param>
19      <Params> ::= <Param>
20      <Param> ::= bool <Ids>
21      <Param> ::= number <Ids>
22      <Param> ::= string <Ids>
23      <Param> ::= flow <Ids>
24      <Param> ::= species <Ids>
25      <Param> ::= sample <Ids>
26      <Param> ::= function <Ids>
27      <Param> ::= network <Ids>
28      <Ids> ::= <Ids> Id
29      <Ids> ::= Id
30      <Allocation> ::= in <Expression>
31      <Allocation> ::= 
32      <Substances> ::= <Substances> ',' <Substance>
33      <Substances> ::= <Substance>
34      <Substance> ::= Id '#' <Expression>
35      <Substance> ::= Id
36      <Statements> ::= <Statements> <Statement>
37      <Statements> ::= 
38      <Statement> ::= <Net Instance>
39      <Statement> ::= <Reaction>
40      <Statement> ::= bool Id '=' <Expression>
41      <Statement> ::= number Id '=' <Expression>
42      <Statement> ::= number Id '=?' <Distribution>
43      <Statement> ::= string Id '=' <Expression>
44      <Statement> ::= flow Id '=' <Expression>
45      <Statement> ::= sample <Sample>
46      <Statement> ::= species <Species>
47      <Statement> ::= function <Function>
48      <Statement> ::= network <Network>
49      <Statement> ::= amount <Ids> '@' <Expression> <Quantity> <Allocation>
50      <Statement> ::= report <Reports>
51      <Statement> ::= if <Expression> then <Statements> <Else>
52      <Statement> ::= ';'
53      <Statement> ::= mix Id ':=' <Expression> with <Expression>
54      <Statement> ::= mix Id with <Expression>
55      <Statement> ::= split Id ',' Id ':=' <Expression> by <Expression>
56      <Statement> ::= equilibrate Id ':=' <Expression> for <Expression>
57      <Statement> ::= equilibrate Id for <Expression>
58      <Statement> ::= equilibrate for <Expression>
59      <Statement> ::= transfer <EmptySample> ':=' <Expression>
60      <Statement> ::= dispose <Expression>
61      <Net Instance> ::= Id '(' ')'
62      <Net Instance> ::= Id '(' <Args> ')'
63      <Else> ::= elseif <Expression> then <Statements> <Else>
64      <Else> ::= else <Statements> end
65      <Else> ::= end
66      <Reaction> ::= <Transition>
67      <Reaction> ::= <Complex> '>>' <Transition>
68      <Transition> ::= <Complex> '->' <Complex>
69      <Transition> ::= <Complex> '->' '{' <Rate> '}' <Complex>
70      <Transition> ::= <Complex> '->' <Complex> '{' <Rate> '}'
71      <Transition> ::= <Complex> '<->' <Complex>
72      <Transition> ::= <Complex> '{' <Rate> '}' '<->' '{' <Rate> '}' <Complex>
73      <Transition> ::= <Complex> '<->' <Complex> '{' <Rate> '}' '{' <Rate> '}'
74      <Rate> ::= <Expression>
75      <Rate> ::= <Expression> ',' <Expression>
76      <Rate> ::= '{' <Expression> '}'
77      <Complex> ::= <Complex> '+' <Simplex>
78      <Complex> ::= <Simplex>
79      <Simplex> ::= Integer Id
80      <Simplex> ::= Id '*' Id
81      <Simplex> ::= Id
82      <Simplex> ::= '#'
83      <Expression> ::= <Or Exp>
84      <Base Exp> ::= <Fun Instance>
85      <Base Exp> ::= true
86      <Base Exp> ::= false
87      <Base Exp> ::= Integer
88      <Base Exp> ::= Float
89      <Base Exp> ::= Double
90      <Base Exp> ::= QuotedString
91      <Base Exp> ::= if <Expression> then <Expression> <Else Exp>
92      <Base Exp> ::= fun <Fun>
93      <Base Exp> ::= net <Net>
94      <Base Exp> ::= '(' <Expression> ')'
95      <Base Exp> ::= define <Statements> return <Expression>
96      <Fun Instance> ::= Id
97      <Fun Instance> ::= <Fun Instance> '(' ')'
98      <Fun Instance> ::= <Fun Instance> '(' <Args> ')'
99      <Else Exp> ::= elseif <Expression> then <Expression> <Else Exp>
100     <Else Exp> ::= else <Expression> end
101     <Args> ::= <Args> ',' <Expression>
102     <Args> ::= <Expression>
103     <Reports> ::= <Reports> ',' <Report>
104     <Reports> ::= <Report>
105     <Report> ::= <Expression> as '[' <Args> ']'
106     <Report> ::= <Expression> as <Expression>
107     <Report> ::= <Expression>
108     <Distribution> ::= Id '(' <Args> ')'
109     <Or Exp> ::= <Or Exp> or <And Exp>
110     <Or Exp> ::= <And Exp>
111     <And Exp> ::= <And Exp> and <Not Exp>
112     <And Exp> ::= <Not Exp>
113     <Not Exp> ::= not <Comp Exp>
114     <Not Exp> ::= <Comp Exp>
115     <Comp Exp> ::= <Sum Exp> '=' <Sum Exp>
116     <Comp Exp> ::= <Sum Exp> '<>' <Sum Exp>
117     <Comp Exp> ::= <Sum Exp> '<=' <Sum Exp>
118     <Comp Exp> ::= <Sum Exp> '>=' <Sum Exp>
119     <Comp Exp> ::= <Sum Exp> '<' <Sum Exp>
120     <Comp Exp> ::= <Sum Exp> '>' <Sum Exp>
121     <Comp Exp> ::= <Sum Exp>
122     <Sum Exp> ::= <Sum Exp> '+' <Mult Exp>
123     <Sum Exp> ::= <Sum Exp> '-' <Mult Exp>
124     <Sum Exp> ::= <Mult Exp>
125     <Mult Exp> ::= <Mult Exp> '*' <Neg Exp>
126     <Mult Exp> ::= <Mult Exp> '/' <Neg Exp>
127     <Mult Exp> ::= <Neg Exp>
128     <Neg Exp> ::= '-' <Powr Exp>
129     <Neg Exp> ::= <Powr Exp>
130     <Powr Exp> ::= <Powr Exp> '^' <Base Exp>
131     <Powr Exp> ::= <Base Exp>
132     <Volume> ::= Id
133     <Temperature> ::= Id
134     <Quantity> ::= Id


